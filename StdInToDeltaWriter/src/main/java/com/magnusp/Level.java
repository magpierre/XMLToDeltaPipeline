/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.magnusp;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Level extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6437501810937807643L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Level\",\"namespace\":\"com.magnusp\",\"fields\":[{\"name\":\"node\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"attr_key\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"attr_value\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence node;
  @Deprecated public java.lang.CharSequence attr_key;
  @Deprecated public java.lang.CharSequence attr_value;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Level() {}

  /**
   * All-args constructor.
   * @param node The new value for node
   * @param attr_key The new value for attr_key
   * @param attr_value The new value for attr_value
   */
  public Level(java.lang.CharSequence node, java.lang.CharSequence attr_key, java.lang.CharSequence attr_value) {
    this.node = node;
    this.attr_key = attr_key;
    this.attr_value = attr_value;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return node;
    case 1: return attr_key;
    case 2: return attr_value;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: node = (java.lang.CharSequence)value$; break;
    case 1: attr_key = (java.lang.CharSequence)value$; break;
    case 2: attr_value = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'node' field.
   * @return The value of the 'node' field.
   */
  public java.lang.CharSequence getNode() {
    return node;
  }

  /**
   * Sets the value of the 'node' field.
   * @param value the value to set.
   */
  public void setNode(java.lang.CharSequence value) {
    this.node = value;
  }

  /**
   * Gets the value of the 'attr_key' field.
   * @return The value of the 'attr_key' field.
   */
  public java.lang.CharSequence getAttrKey() {
    return attr_key;
  }

  /**
   * Sets the value of the 'attr_key' field.
   * @param value the value to set.
   */
  public void setAttrKey(java.lang.CharSequence value) {
    this.attr_key = value;
  }

  /**
   * Gets the value of the 'attr_value' field.
   * @return The value of the 'attr_value' field.
   */
  public java.lang.CharSequence getAttrValue() {
    return attr_value;
  }

  /**
   * Sets the value of the 'attr_value' field.
   * @param value the value to set.
   */
  public void setAttrValue(java.lang.CharSequence value) {
    this.attr_value = value;
  }

  /**
   * Creates a new Level RecordBuilder.
   * @return A new Level RecordBuilder
   */
  public static com.magnusp.Level.Builder newBuilder() {
    return new com.magnusp.Level.Builder();
  }

  /**
   * Creates a new Level RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Level RecordBuilder
   */
  public static com.magnusp.Level.Builder newBuilder(com.magnusp.Level.Builder other) {
    return new com.magnusp.Level.Builder(other);
  }

  /**
   * Creates a new Level RecordBuilder by copying an existing Level instance.
   * @param other The existing instance to copy.
   * @return A new Level RecordBuilder
   */
  public static com.magnusp.Level.Builder newBuilder(com.magnusp.Level other) {
    return new com.magnusp.Level.Builder(other);
  }

  /**
   * RecordBuilder for Level instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Level>
    implements org.apache.avro.data.RecordBuilder<Level> {

    private java.lang.CharSequence node;
    private java.lang.CharSequence attr_key;
    private java.lang.CharSequence attr_value;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.magnusp.Level.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.node)) {
        this.node = data().deepCopy(fields()[0].schema(), other.node);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attr_key)) {
        this.attr_key = data().deepCopy(fields()[1].schema(), other.attr_key);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.attr_value)) {
        this.attr_value = data().deepCopy(fields()[2].schema(), other.attr_value);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Level instance
     * @param other The existing instance to copy.
     */
    private Builder(com.magnusp.Level other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.node)) {
        this.node = data().deepCopy(fields()[0].schema(), other.node);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attr_key)) {
        this.attr_key = data().deepCopy(fields()[1].schema(), other.attr_key);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.attr_value)) {
        this.attr_value = data().deepCopy(fields()[2].schema(), other.attr_value);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'node' field.
      * @return The value.
      */
    public java.lang.CharSequence getNode() {
      return node;
    }

    /**
      * Sets the value of the 'node' field.
      * @param value The value of 'node'.
      * @return This builder.
      */
    public com.magnusp.Level.Builder setNode(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.node = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'node' field has been set.
      * @return True if the 'node' field has been set, false otherwise.
      */
    public boolean hasNode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'node' field.
      * @return This builder.
      */
    public com.magnusp.Level.Builder clearNode() {
      node = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'attr_key' field.
      * @return The value.
      */
    public java.lang.CharSequence getAttrKey() {
      return attr_key;
    }

    /**
      * Sets the value of the 'attr_key' field.
      * @param value The value of 'attr_key'.
      * @return This builder.
      */
    public com.magnusp.Level.Builder setAttrKey(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.attr_key = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'attr_key' field has been set.
      * @return True if the 'attr_key' field has been set, false otherwise.
      */
    public boolean hasAttrKey() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'attr_key' field.
      * @return This builder.
      */
    public com.magnusp.Level.Builder clearAttrKey() {
      attr_key = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'attr_value' field.
      * @return The value.
      */
    public java.lang.CharSequence getAttrValue() {
      return attr_value;
    }

    /**
      * Sets the value of the 'attr_value' field.
      * @param value The value of 'attr_value'.
      * @return This builder.
      */
    public com.magnusp.Level.Builder setAttrValue(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.attr_value = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'attr_value' field has been set.
      * @return True if the 'attr_value' field has been set, false otherwise.
      */
    public boolean hasAttrValue() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'attr_value' field.
      * @return This builder.
      */
    public com.magnusp.Level.Builder clearAttrValue() {
      attr_value = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Level build() {
      try {
        Level record = new Level();
        record.node = fieldSetFlags()[0] ? this.node : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.attr_key = fieldSetFlags()[1] ? this.attr_key : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.attr_value = fieldSetFlags()[2] ? this.attr_value : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
